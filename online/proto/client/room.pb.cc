// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "room.pb.h"
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace onlineproto {

namespace {

const ::google::protobuf::Descriptor* cs_get_room_list_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cs_get_room_list_reflection_ = NULL;
const ::google::protobuf::Descriptor* sc_get_room_list_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sc_get_room_list_reflection_ = NULL;
const ::google::protobuf::Descriptor* cs_enter_room_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cs_enter_room_reflection_ = NULL;
const ::google::protobuf::Descriptor* sc_enter_room_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sc_enter_room_reflection_ = NULL;
const ::google::protobuf::Descriptor* cs_leave_room_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cs_leave_room_reflection_ = NULL;
const ::google::protobuf::Descriptor* sc_leave_room_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sc_leave_room_reflection_ = NULL;
const ::google::protobuf::Descriptor* cs_inside_ready_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cs_inside_ready_reflection_ = NULL;
const ::google::protobuf::Descriptor* sc_inside_ready_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sc_inside_ready_reflection_ = NULL;
const ::google::protobuf::Descriptor* cs_inside_start_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cs_inside_start_reflection_ = NULL;
const ::google::protobuf::Descriptor* sc_inside_start_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sc_inside_start_reflection_ = NULL;
const ::google::protobuf::Descriptor* cs_notify_room_update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cs_notify_room_update_reflection_ = NULL;
const ::google::protobuf::Descriptor* sc_notify_room_update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sc_notify_room_update_reflection_ = NULL;
const ::google::protobuf::Descriptor* cs_create_room_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  cs_create_room_reflection_ = NULL;
const ::google::protobuf::Descriptor* sc_create_room_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  sc_create_room_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_room_2eproto() {
  protobuf_AddDesc_room_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "room.proto");
  GOOGLE_CHECK(file != NULL);
  cs_get_room_list_descriptor_ = file->message_type(0);
  static const int cs_get_room_list_offsets_[1] = {
  };
  cs_get_room_list_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cs_get_room_list_descriptor_,
      cs_get_room_list::default_instance_,
      cs_get_room_list_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_get_room_list, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_get_room_list, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cs_get_room_list));
  sc_get_room_list_descriptor_ = file->message_type(1);
  static const int sc_get_room_list_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_get_room_list, room_list_),
  };
  sc_get_room_list_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sc_get_room_list_descriptor_,
      sc_get_room_list::default_instance_,
      sc_get_room_list_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_get_room_list, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_get_room_list, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sc_get_room_list));
  cs_enter_room_descriptor_ = file->message_type(2);
  static const int cs_enter_room_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_enter_room, room_id_),
  };
  cs_enter_room_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cs_enter_room_descriptor_,
      cs_enter_room::default_instance_,
      cs_enter_room_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_enter_room, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_enter_room, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cs_enter_room));
  sc_enter_room_descriptor_ = file->message_type(3);
  static const int sc_enter_room_offsets_[1] = {
  };
  sc_enter_room_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sc_enter_room_descriptor_,
      sc_enter_room::default_instance_,
      sc_enter_room_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_enter_room, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_enter_room, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sc_enter_room));
  cs_leave_room_descriptor_ = file->message_type(4);
  static const int cs_leave_room_offsets_[1] = {
  };
  cs_leave_room_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cs_leave_room_descriptor_,
      cs_leave_room::default_instance_,
      cs_leave_room_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_leave_room, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_leave_room, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cs_leave_room));
  sc_leave_room_descriptor_ = file->message_type(5);
  static const int sc_leave_room_offsets_[1] = {
  };
  sc_leave_room_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sc_leave_room_descriptor_,
      sc_leave_room::default_instance_,
      sc_leave_room_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_leave_room, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_leave_room, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sc_leave_room));
  cs_inside_ready_descriptor_ = file->message_type(6);
  static const int cs_inside_ready_offsets_[1] = {
  };
  cs_inside_ready_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cs_inside_ready_descriptor_,
      cs_inside_ready::default_instance_,
      cs_inside_ready_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_inside_ready, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_inside_ready, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cs_inside_ready));
  sc_inside_ready_descriptor_ = file->message_type(7);
  static const int sc_inside_ready_offsets_[1] = {
  };
  sc_inside_ready_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sc_inside_ready_descriptor_,
      sc_inside_ready::default_instance_,
      sc_inside_ready_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_inside_ready, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_inside_ready, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sc_inside_ready));
  cs_inside_start_descriptor_ = file->message_type(8);
  static const int cs_inside_start_offsets_[1] = {
  };
  cs_inside_start_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cs_inside_start_descriptor_,
      cs_inside_start::default_instance_,
      cs_inside_start_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_inside_start, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_inside_start, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cs_inside_start));
  sc_inside_start_descriptor_ = file->message_type(9);
  static const int sc_inside_start_offsets_[1] = {
  };
  sc_inside_start_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sc_inside_start_descriptor_,
      sc_inside_start::default_instance_,
      sc_inside_start_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_inside_start, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_inside_start, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sc_inside_start));
  cs_notify_room_update_descriptor_ = file->message_type(10);
  static const int cs_notify_room_update_offsets_[1] = {
  };
  cs_notify_room_update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cs_notify_room_update_descriptor_,
      cs_notify_room_update::default_instance_,
      cs_notify_room_update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_notify_room_update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_notify_room_update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cs_notify_room_update));
  sc_notify_room_update_descriptor_ = file->message_type(11);
  static const int sc_notify_room_update_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_notify_room_update, oper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_notify_room_update, room_),
  };
  sc_notify_room_update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sc_notify_room_update_descriptor_,
      sc_notify_room_update::default_instance_,
      sc_notify_room_update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_notify_room_update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_notify_room_update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sc_notify_room_update));
  cs_create_room_descriptor_ = file->message_type(12);
  static const int cs_create_room_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_create_room, map_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_create_room, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_create_room, passwd_),
  };
  cs_create_room_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      cs_create_room_descriptor_,
      cs_create_room::default_instance_,
      cs_create_room_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_create_room, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(cs_create_room, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(cs_create_room));
  sc_create_room_descriptor_ = file->message_type(13);
  static const int sc_create_room_offsets_[1] = {
  };
  sc_create_room_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      sc_create_room_descriptor_,
      sc_create_room::default_instance_,
      sc_create_room_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_create_room, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(sc_create_room, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(sc_create_room));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_room_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cs_get_room_list_descriptor_, &cs_get_room_list::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sc_get_room_list_descriptor_, &sc_get_room_list::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cs_enter_room_descriptor_, &cs_enter_room::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sc_enter_room_descriptor_, &sc_enter_room::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cs_leave_room_descriptor_, &cs_leave_room::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sc_leave_room_descriptor_, &sc_leave_room::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cs_inside_ready_descriptor_, &cs_inside_ready::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sc_inside_ready_descriptor_, &sc_inside_ready::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cs_inside_start_descriptor_, &cs_inside_start::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sc_inside_start_descriptor_, &sc_inside_start::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cs_notify_room_update_descriptor_, &cs_notify_room_update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sc_notify_room_update_descriptor_, &sc_notify_room_update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    cs_create_room_descriptor_, &cs_create_room::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    sc_create_room_descriptor_, &sc_create_room::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_room_2eproto() {
  delete cs_get_room_list::default_instance_;
  delete cs_get_room_list_reflection_;
  delete sc_get_room_list::default_instance_;
  delete sc_get_room_list_reflection_;
  delete cs_enter_room::default_instance_;
  delete cs_enter_room_reflection_;
  delete sc_enter_room::default_instance_;
  delete sc_enter_room_reflection_;
  delete cs_leave_room::default_instance_;
  delete cs_leave_room_reflection_;
  delete sc_leave_room::default_instance_;
  delete sc_leave_room_reflection_;
  delete cs_inside_ready::default_instance_;
  delete cs_inside_ready_reflection_;
  delete sc_inside_ready::default_instance_;
  delete sc_inside_ready_reflection_;
  delete cs_inside_start::default_instance_;
  delete cs_inside_start_reflection_;
  delete sc_inside_start::default_instance_;
  delete sc_inside_start_reflection_;
  delete cs_notify_room_update::default_instance_;
  delete cs_notify_room_update_reflection_;
  delete sc_notify_room_update::default_instance_;
  delete sc_notify_room_update_reflection_;
  delete cs_create_room::default_instance_;
  delete cs_create_room_reflection_;
  delete sc_create_room::default_instance_;
  delete sc_create_room_reflection_;
}

void protobuf_AddDesc_room_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::onlineproto::protobuf_AddDesc_data_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nroom.proto\022\013onlineproto\032\ndata.proto\"\022\n"
    "\020cs_get_room_list\"?\n\020sc_get_room_list\022+\n"
    "\troom_list\030\001 \003(\0132\030.onlineproto.room_data"
    "_t\" \n\rcs_enter_room\022\017\n\007room_id\030\001 \002(\r\"\017\n\r"
    "sc_enter_room\"\017\n\rcs_leave_room\"\017\n\rsc_lea"
    "ve_room\"\021\n\017cs_inside_ready\"\021\n\017sc_inside_"
    "ready\"\021\n\017cs_inside_start\"\021\n\017sc_inside_st"
    "art\"\027\n\025cs_notify_room_update\"M\n\025sc_notif"
    "y_room_update\022\014\n\004oper\030\001 \002(\r\022&\n\004room\030\002 \002("
    "\0132\030.onlineproto.room_data_t\">\n\016cs_create"
    "_room\022\016\n\006map_id\030\001 \002(\r\022\014\n\004name\030\002 \002(\t\022\016\n\006p"
    "asswd\030\003 \002(\r\"\020\n\016sc_create_room", 469);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "room.proto", &protobuf_RegisterTypes);
  cs_get_room_list::default_instance_ = new cs_get_room_list();
  sc_get_room_list::default_instance_ = new sc_get_room_list();
  cs_enter_room::default_instance_ = new cs_enter_room();
  sc_enter_room::default_instance_ = new sc_enter_room();
  cs_leave_room::default_instance_ = new cs_leave_room();
  sc_leave_room::default_instance_ = new sc_leave_room();
  cs_inside_ready::default_instance_ = new cs_inside_ready();
  sc_inside_ready::default_instance_ = new sc_inside_ready();
  cs_inside_start::default_instance_ = new cs_inside_start();
  sc_inside_start::default_instance_ = new sc_inside_start();
  cs_notify_room_update::default_instance_ = new cs_notify_room_update();
  sc_notify_room_update::default_instance_ = new sc_notify_room_update();
  cs_create_room::default_instance_ = new cs_create_room();
  sc_create_room::default_instance_ = new sc_create_room();
  cs_get_room_list::default_instance_->InitAsDefaultInstance();
  sc_get_room_list::default_instance_->InitAsDefaultInstance();
  cs_enter_room::default_instance_->InitAsDefaultInstance();
  sc_enter_room::default_instance_->InitAsDefaultInstance();
  cs_leave_room::default_instance_->InitAsDefaultInstance();
  sc_leave_room::default_instance_->InitAsDefaultInstance();
  cs_inside_ready::default_instance_->InitAsDefaultInstance();
  sc_inside_ready::default_instance_->InitAsDefaultInstance();
  cs_inside_start::default_instance_->InitAsDefaultInstance();
  sc_inside_start::default_instance_->InitAsDefaultInstance();
  cs_notify_room_update::default_instance_->InitAsDefaultInstance();
  sc_notify_room_update::default_instance_->InitAsDefaultInstance();
  cs_create_room::default_instance_->InitAsDefaultInstance();
  sc_create_room::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_room_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_room_2eproto {
  StaticDescriptorInitializer_room_2eproto() {
    protobuf_AddDesc_room_2eproto();
  }
} static_descriptor_initializer_room_2eproto_;


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

cs_get_room_list::cs_get_room_list()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cs_get_room_list::InitAsDefaultInstance() {
}

cs_get_room_list::cs_get_room_list(const cs_get_room_list& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cs_get_room_list::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cs_get_room_list::~cs_get_room_list() {
  SharedDtor();
}

void cs_get_room_list::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cs_get_room_list::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cs_get_room_list::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cs_get_room_list_descriptor_;
}

const cs_get_room_list& cs_get_room_list::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

cs_get_room_list* cs_get_room_list::default_instance_ = NULL;

cs_get_room_list* cs_get_room_list::New() const {
  return new cs_get_room_list;
}

void cs_get_room_list::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cs_get_room_list::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void cs_get_room_list::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cs_get_room_list::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cs_get_room_list::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cs_get_room_list::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cs_get_room_list* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cs_get_room_list*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cs_get_room_list::MergeFrom(const cs_get_room_list& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cs_get_room_list::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cs_get_room_list::CopyFrom(const cs_get_room_list& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cs_get_room_list::IsInitialized() const {
  
  return true;
}

void cs_get_room_list::Swap(cs_get_room_list* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cs_get_room_list::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cs_get_room_list_descriptor_;
  metadata.reflection = cs_get_room_list_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sc_get_room_list::kRoomListFieldNumber;
#endif  // !_MSC_VER

sc_get_room_list::sc_get_room_list()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sc_get_room_list::InitAsDefaultInstance() {
}

sc_get_room_list::sc_get_room_list(const sc_get_room_list& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sc_get_room_list::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sc_get_room_list::~sc_get_room_list() {
  SharedDtor();
}

void sc_get_room_list::SharedDtor() {
  if (this != default_instance_) {
  }
}

void sc_get_room_list::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sc_get_room_list::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sc_get_room_list_descriptor_;
}

const sc_get_room_list& sc_get_room_list::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

sc_get_room_list* sc_get_room_list::default_instance_ = NULL;

sc_get_room_list* sc_get_room_list::New() const {
  return new sc_get_room_list;
}

void sc_get_room_list::Clear() {
  room_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sc_get_room_list::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .onlineproto.room_data_t room_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_room_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_room_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_room_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sc_get_room_list::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .onlineproto.room_data_t room_list = 1;
  for (int i = 0; i < this->room_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->room_list(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sc_get_room_list::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .onlineproto.room_data_t room_list = 1;
  for (int i = 0; i < this->room_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->room_list(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sc_get_room_list::ByteSize() const {
  int total_size = 0;
  
  // repeated .onlineproto.room_data_t room_list = 1;
  total_size += 1 * this->room_list_size();
  for (int i = 0; i < this->room_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->room_list(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sc_get_room_list::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sc_get_room_list* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sc_get_room_list*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sc_get_room_list::MergeFrom(const sc_get_room_list& from) {
  GOOGLE_CHECK_NE(&from, this);
  room_list_.MergeFrom(from.room_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sc_get_room_list::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sc_get_room_list::CopyFrom(const sc_get_room_list& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sc_get_room_list::IsInitialized() const {
  
  for (int i = 0; i < room_list_size(); i++) {
    if (!this->room_list(i).IsInitialized()) return false;
  }
  return true;
}

void sc_get_room_list::Swap(sc_get_room_list* other) {
  if (other != this) {
    room_list_.Swap(&other->room_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sc_get_room_list::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sc_get_room_list_descriptor_;
  metadata.reflection = sc_get_room_list_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int cs_enter_room::kRoomIdFieldNumber;
#endif  // !_MSC_VER

cs_enter_room::cs_enter_room()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cs_enter_room::InitAsDefaultInstance() {
}

cs_enter_room::cs_enter_room(const cs_enter_room& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cs_enter_room::SharedCtor() {
  _cached_size_ = 0;
  room_id_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cs_enter_room::~cs_enter_room() {
  SharedDtor();
}

void cs_enter_room::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cs_enter_room::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cs_enter_room::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cs_enter_room_descriptor_;
}

const cs_enter_room& cs_enter_room::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

cs_enter_room* cs_enter_room::default_instance_ = NULL;

cs_enter_room* cs_enter_room::New() const {
  return new cs_enter_room;
}

void cs_enter_room::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    room_id_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cs_enter_room::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 room_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cs_enter_room::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 room_id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cs_enter_room::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 room_id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cs_enter_room::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 room_id = 1;
    if (has_room_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->room_id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cs_enter_room::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cs_enter_room* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cs_enter_room*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cs_enter_room::MergeFrom(const cs_enter_room& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_room_id(from.room_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cs_enter_room::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cs_enter_room::CopyFrom(const cs_enter_room& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cs_enter_room::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void cs_enter_room::Swap(cs_enter_room* other) {
  if (other != this) {
    std::swap(room_id_, other->room_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cs_enter_room::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cs_enter_room_descriptor_;
  metadata.reflection = cs_enter_room_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

sc_enter_room::sc_enter_room()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sc_enter_room::InitAsDefaultInstance() {
}

sc_enter_room::sc_enter_room(const sc_enter_room& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sc_enter_room::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sc_enter_room::~sc_enter_room() {
  SharedDtor();
}

void sc_enter_room::SharedDtor() {
  if (this != default_instance_) {
  }
}

void sc_enter_room::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sc_enter_room::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sc_enter_room_descriptor_;
}

const sc_enter_room& sc_enter_room::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

sc_enter_room* sc_enter_room::default_instance_ = NULL;

sc_enter_room* sc_enter_room::New() const {
  return new sc_enter_room;
}

void sc_enter_room::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sc_enter_room::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void sc_enter_room::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sc_enter_room::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sc_enter_room::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sc_enter_room::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sc_enter_room* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sc_enter_room*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sc_enter_room::MergeFrom(const sc_enter_room& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sc_enter_room::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sc_enter_room::CopyFrom(const sc_enter_room& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sc_enter_room::IsInitialized() const {
  
  return true;
}

void sc_enter_room::Swap(sc_enter_room* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sc_enter_room::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sc_enter_room_descriptor_;
  metadata.reflection = sc_enter_room_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

cs_leave_room::cs_leave_room()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cs_leave_room::InitAsDefaultInstance() {
}

cs_leave_room::cs_leave_room(const cs_leave_room& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cs_leave_room::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cs_leave_room::~cs_leave_room() {
  SharedDtor();
}

void cs_leave_room::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cs_leave_room::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cs_leave_room::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cs_leave_room_descriptor_;
}

const cs_leave_room& cs_leave_room::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

cs_leave_room* cs_leave_room::default_instance_ = NULL;

cs_leave_room* cs_leave_room::New() const {
  return new cs_leave_room;
}

void cs_leave_room::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cs_leave_room::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void cs_leave_room::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cs_leave_room::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cs_leave_room::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cs_leave_room::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cs_leave_room* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cs_leave_room*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cs_leave_room::MergeFrom(const cs_leave_room& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cs_leave_room::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cs_leave_room::CopyFrom(const cs_leave_room& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cs_leave_room::IsInitialized() const {
  
  return true;
}

void cs_leave_room::Swap(cs_leave_room* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cs_leave_room::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cs_leave_room_descriptor_;
  metadata.reflection = cs_leave_room_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

sc_leave_room::sc_leave_room()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sc_leave_room::InitAsDefaultInstance() {
}

sc_leave_room::sc_leave_room(const sc_leave_room& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sc_leave_room::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sc_leave_room::~sc_leave_room() {
  SharedDtor();
}

void sc_leave_room::SharedDtor() {
  if (this != default_instance_) {
  }
}

void sc_leave_room::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sc_leave_room::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sc_leave_room_descriptor_;
}

const sc_leave_room& sc_leave_room::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

sc_leave_room* sc_leave_room::default_instance_ = NULL;

sc_leave_room* sc_leave_room::New() const {
  return new sc_leave_room;
}

void sc_leave_room::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sc_leave_room::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void sc_leave_room::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sc_leave_room::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sc_leave_room::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sc_leave_room::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sc_leave_room* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sc_leave_room*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sc_leave_room::MergeFrom(const sc_leave_room& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sc_leave_room::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sc_leave_room::CopyFrom(const sc_leave_room& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sc_leave_room::IsInitialized() const {
  
  return true;
}

void sc_leave_room::Swap(sc_leave_room* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sc_leave_room::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sc_leave_room_descriptor_;
  metadata.reflection = sc_leave_room_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

cs_inside_ready::cs_inside_ready()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cs_inside_ready::InitAsDefaultInstance() {
}

cs_inside_ready::cs_inside_ready(const cs_inside_ready& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cs_inside_ready::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cs_inside_ready::~cs_inside_ready() {
  SharedDtor();
}

void cs_inside_ready::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cs_inside_ready::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cs_inside_ready::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cs_inside_ready_descriptor_;
}

const cs_inside_ready& cs_inside_ready::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

cs_inside_ready* cs_inside_ready::default_instance_ = NULL;

cs_inside_ready* cs_inside_ready::New() const {
  return new cs_inside_ready;
}

void cs_inside_ready::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cs_inside_ready::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void cs_inside_ready::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cs_inside_ready::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cs_inside_ready::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cs_inside_ready::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cs_inside_ready* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cs_inside_ready*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cs_inside_ready::MergeFrom(const cs_inside_ready& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cs_inside_ready::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cs_inside_ready::CopyFrom(const cs_inside_ready& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cs_inside_ready::IsInitialized() const {
  
  return true;
}

void cs_inside_ready::Swap(cs_inside_ready* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cs_inside_ready::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cs_inside_ready_descriptor_;
  metadata.reflection = cs_inside_ready_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

sc_inside_ready::sc_inside_ready()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sc_inside_ready::InitAsDefaultInstance() {
}

sc_inside_ready::sc_inside_ready(const sc_inside_ready& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sc_inside_ready::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sc_inside_ready::~sc_inside_ready() {
  SharedDtor();
}

void sc_inside_ready::SharedDtor() {
  if (this != default_instance_) {
  }
}

void sc_inside_ready::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sc_inside_ready::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sc_inside_ready_descriptor_;
}

const sc_inside_ready& sc_inside_ready::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

sc_inside_ready* sc_inside_ready::default_instance_ = NULL;

sc_inside_ready* sc_inside_ready::New() const {
  return new sc_inside_ready;
}

void sc_inside_ready::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sc_inside_ready::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void sc_inside_ready::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sc_inside_ready::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sc_inside_ready::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sc_inside_ready::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sc_inside_ready* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sc_inside_ready*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sc_inside_ready::MergeFrom(const sc_inside_ready& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sc_inside_ready::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sc_inside_ready::CopyFrom(const sc_inside_ready& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sc_inside_ready::IsInitialized() const {
  
  return true;
}

void sc_inside_ready::Swap(sc_inside_ready* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sc_inside_ready::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sc_inside_ready_descriptor_;
  metadata.reflection = sc_inside_ready_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

cs_inside_start::cs_inside_start()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cs_inside_start::InitAsDefaultInstance() {
}

cs_inside_start::cs_inside_start(const cs_inside_start& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cs_inside_start::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cs_inside_start::~cs_inside_start() {
  SharedDtor();
}

void cs_inside_start::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cs_inside_start::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cs_inside_start::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cs_inside_start_descriptor_;
}

const cs_inside_start& cs_inside_start::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

cs_inside_start* cs_inside_start::default_instance_ = NULL;

cs_inside_start* cs_inside_start::New() const {
  return new cs_inside_start;
}

void cs_inside_start::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cs_inside_start::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void cs_inside_start::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cs_inside_start::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cs_inside_start::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cs_inside_start::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cs_inside_start* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cs_inside_start*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cs_inside_start::MergeFrom(const cs_inside_start& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cs_inside_start::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cs_inside_start::CopyFrom(const cs_inside_start& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cs_inside_start::IsInitialized() const {
  
  return true;
}

void cs_inside_start::Swap(cs_inside_start* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cs_inside_start::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cs_inside_start_descriptor_;
  metadata.reflection = cs_inside_start_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

sc_inside_start::sc_inside_start()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sc_inside_start::InitAsDefaultInstance() {
}

sc_inside_start::sc_inside_start(const sc_inside_start& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sc_inside_start::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sc_inside_start::~sc_inside_start() {
  SharedDtor();
}

void sc_inside_start::SharedDtor() {
  if (this != default_instance_) {
  }
}

void sc_inside_start::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sc_inside_start::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sc_inside_start_descriptor_;
}

const sc_inside_start& sc_inside_start::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

sc_inside_start* sc_inside_start::default_instance_ = NULL;

sc_inside_start* sc_inside_start::New() const {
  return new sc_inside_start;
}

void sc_inside_start::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sc_inside_start::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void sc_inside_start::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sc_inside_start::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sc_inside_start::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sc_inside_start::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sc_inside_start* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sc_inside_start*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sc_inside_start::MergeFrom(const sc_inside_start& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sc_inside_start::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sc_inside_start::CopyFrom(const sc_inside_start& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sc_inside_start::IsInitialized() const {
  
  return true;
}

void sc_inside_start::Swap(sc_inside_start* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sc_inside_start::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sc_inside_start_descriptor_;
  metadata.reflection = sc_inside_start_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

cs_notify_room_update::cs_notify_room_update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cs_notify_room_update::InitAsDefaultInstance() {
}

cs_notify_room_update::cs_notify_room_update(const cs_notify_room_update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cs_notify_room_update::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cs_notify_room_update::~cs_notify_room_update() {
  SharedDtor();
}

void cs_notify_room_update::SharedDtor() {
  if (this != default_instance_) {
  }
}

void cs_notify_room_update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cs_notify_room_update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cs_notify_room_update_descriptor_;
}

const cs_notify_room_update& cs_notify_room_update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

cs_notify_room_update* cs_notify_room_update::default_instance_ = NULL;

cs_notify_room_update* cs_notify_room_update::New() const {
  return new cs_notify_room_update;
}

void cs_notify_room_update::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cs_notify_room_update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void cs_notify_room_update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cs_notify_room_update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cs_notify_room_update::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cs_notify_room_update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cs_notify_room_update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cs_notify_room_update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cs_notify_room_update::MergeFrom(const cs_notify_room_update& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cs_notify_room_update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cs_notify_room_update::CopyFrom(const cs_notify_room_update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cs_notify_room_update::IsInitialized() const {
  
  return true;
}

void cs_notify_room_update::Swap(cs_notify_room_update* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cs_notify_room_update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cs_notify_room_update_descriptor_;
  metadata.reflection = cs_notify_room_update_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int sc_notify_room_update::kOperFieldNumber;
const int sc_notify_room_update::kRoomFieldNumber;
#endif  // !_MSC_VER

sc_notify_room_update::sc_notify_room_update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sc_notify_room_update::InitAsDefaultInstance() {
  room_ = const_cast< ::onlineproto::room_data_t*>(&::onlineproto::room_data_t::default_instance());
}

sc_notify_room_update::sc_notify_room_update(const sc_notify_room_update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sc_notify_room_update::SharedCtor() {
  _cached_size_ = 0;
  oper_ = 0u;
  room_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sc_notify_room_update::~sc_notify_room_update() {
  SharedDtor();
}

void sc_notify_room_update::SharedDtor() {
  if (this != default_instance_) {
    delete room_;
  }
}

void sc_notify_room_update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sc_notify_room_update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sc_notify_room_update_descriptor_;
}

const sc_notify_room_update& sc_notify_room_update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

sc_notify_room_update* sc_notify_room_update::default_instance_ = NULL;

sc_notify_room_update* sc_notify_room_update::New() const {
  return new sc_notify_room_update;
}

void sc_notify_room_update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oper_ = 0u;
    if (_has_bit(1)) {
      if (room_ != NULL) room_->::onlineproto::room_data_t::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sc_notify_room_update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 oper = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &oper_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_room;
        break;
      }
      
      // required .onlineproto.room_data_t room = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_room:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_room()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void sc_notify_room_update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 oper = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->oper(), output);
  }
  
  // required .onlineproto.room_data_t room = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->room(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sc_notify_room_update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 oper = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->oper(), target);
  }
  
  // required .onlineproto.room_data_t room = 2;
  if (_has_bit(1)) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->room(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sc_notify_room_update::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 oper = 1;
    if (has_oper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->oper());
    }
    
    // required .onlineproto.room_data_t room = 2;
    if (has_room()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->room());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sc_notify_room_update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sc_notify_room_update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sc_notify_room_update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sc_notify_room_update::MergeFrom(const sc_notify_room_update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_oper(from.oper());
    }
    if (from._has_bit(1)) {
      mutable_room()->::onlineproto::room_data_t::MergeFrom(from.room());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sc_notify_room_update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sc_notify_room_update::CopyFrom(const sc_notify_room_update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sc_notify_room_update::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  if (has_room()) {
    if (!this->room().IsInitialized()) return false;
  }
  return true;
}

void sc_notify_room_update::Swap(sc_notify_room_update* other) {
  if (other != this) {
    std::swap(oper_, other->oper_);
    std::swap(room_, other->room_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sc_notify_room_update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sc_notify_room_update_descriptor_;
  metadata.reflection = sc_notify_room_update_reflection_;
  return metadata;
}


// ===================================================================

const ::std::string cs_create_room::_default_name_;
#ifndef _MSC_VER
const int cs_create_room::kMapIdFieldNumber;
const int cs_create_room::kNameFieldNumber;
const int cs_create_room::kPasswdFieldNumber;
#endif  // !_MSC_VER

cs_create_room::cs_create_room()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void cs_create_room::InitAsDefaultInstance() {
}

cs_create_room::cs_create_room(const cs_create_room& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void cs_create_room::SharedCtor() {
  _cached_size_ = 0;
  map_id_ = 0u;
  name_ = const_cast< ::std::string*>(&_default_name_);
  passwd_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

cs_create_room::~cs_create_room() {
  SharedDtor();
}

void cs_create_room::SharedDtor() {
  if (name_ != &_default_name_) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void cs_create_room::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* cs_create_room::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return cs_create_room_descriptor_;
}

const cs_create_room& cs_create_room::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

cs_create_room* cs_create_room::default_instance_ = NULL;

cs_create_room* cs_create_room::New() const {
  return new cs_create_room;
}

void cs_create_room::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    map_id_ = 0u;
    if (_has_bit(1)) {
      if (name_ != &_default_name_) {
        name_->clear();
      }
    }
    passwd_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool cs_create_room::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 map_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &map_id_)));
          _set_bit(0);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // required string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_passwd;
        break;
      }
      
      // required uint32 passwd = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_passwd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passwd_)));
          _set_bit(2);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void cs_create_room::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 map_id = 1;
  if (_has_bit(0)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->map_id(), output);
  }
  
  // required string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // required uint32 passwd = 3;
  if (_has_bit(2)) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->passwd(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* cs_create_room::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 map_id = 1;
  if (_has_bit(0)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->map_id(), target);
  }
  
  // required string name = 2;
  if (_has_bit(1)) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // required uint32 passwd = 3;
  if (_has_bit(2)) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->passwd(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int cs_create_room::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 map_id = 1;
    if (has_map_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->map_id());
    }
    
    // required string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required uint32 passwd = 3;
    if (has_passwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->passwd());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void cs_create_room::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const cs_create_room* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const cs_create_room*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void cs_create_room::MergeFrom(const cs_create_room& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from._has_bit(0)) {
      set_map_id(from.map_id());
    }
    if (from._has_bit(1)) {
      set_name(from.name());
    }
    if (from._has_bit(2)) {
      set_passwd(from.passwd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void cs_create_room::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void cs_create_room::CopyFrom(const cs_create_room& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool cs_create_room::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void cs_create_room::Swap(cs_create_room* other) {
  if (other != this) {
    std::swap(map_id_, other->map_id_);
    std::swap(name_, other->name_);
    std::swap(passwd_, other->passwd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata cs_create_room::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = cs_create_room_descriptor_;
  metadata.reflection = cs_create_room_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

sc_create_room::sc_create_room()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void sc_create_room::InitAsDefaultInstance() {
}

sc_create_room::sc_create_room(const sc_create_room& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void sc_create_room::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

sc_create_room::~sc_create_room() {
  SharedDtor();
}

void sc_create_room::SharedDtor() {
  if (this != default_instance_) {
  }
}

void sc_create_room::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* sc_create_room::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return sc_create_room_descriptor_;
}

const sc_create_room& sc_create_room::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();  return *default_instance_;
}

sc_create_room* sc_create_room::default_instance_ = NULL;

sc_create_room* sc_create_room::New() const {
  return new sc_create_room;
}

void sc_create_room::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool sc_create_room::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void sc_create_room::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* sc_create_room::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int sc_create_room::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void sc_create_room::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const sc_create_room* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const sc_create_room*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void sc_create_room::MergeFrom(const sc_create_room& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void sc_create_room::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void sc_create_room::CopyFrom(const sc_create_room& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool sc_create_room::IsInitialized() const {
  
  return true;
}

void sc_create_room::Swap(sc_create_room* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata sc_create_room::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = sc_create_room_descriptor_;
  metadata.reflection = sc_create_room_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace onlineproto

// @@protoc_insertion_point(global_scope)
