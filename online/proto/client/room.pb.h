// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: room.proto

#ifndef PROTOBUF_room_2eproto__INCLUDED
#define PROTOBUF_room_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "data.pb.h"
// @@protoc_insertion_point(includes)

namespace onlineproto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_room_2eproto();
void protobuf_AssignDesc_room_2eproto();
void protobuf_ShutdownFile_room_2eproto();

class cs_get_room_list;
class sc_get_room_list;
class cs_enter_room;
class sc_enter_room;
class cs_leave_room;
class sc_leave_room;
class cs_inside_ready;
class sc_inside_ready;
class cs_inside_start;
class sc_inside_start;
class cs_notify_room_update;
class sc_notify_room_update;
class cs_create_room;
class sc_create_room;

// ===================================================================

class cs_get_room_list : public ::google::protobuf::Message {
 public:
  cs_get_room_list();
  virtual ~cs_get_room_list();
  
  cs_get_room_list(const cs_get_room_list& from);
  
  inline cs_get_room_list& operator=(const cs_get_room_list& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cs_get_room_list& default_instance();
  
  void Swap(cs_get_room_list* other);
  
  // implements Message ----------------------------------------------
  
  cs_get_room_list* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cs_get_room_list& from);
  void MergeFrom(const cs_get_room_list& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:onlineproto.cs_get_room_list)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static cs_get_room_list* default_instance_;
};
// -------------------------------------------------------------------

class sc_get_room_list : public ::google::protobuf::Message {
 public:
  sc_get_room_list();
  virtual ~sc_get_room_list();
  
  sc_get_room_list(const sc_get_room_list& from);
  
  inline sc_get_room_list& operator=(const sc_get_room_list& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const sc_get_room_list& default_instance();
  
  void Swap(sc_get_room_list* other);
  
  // implements Message ----------------------------------------------
  
  sc_get_room_list* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sc_get_room_list& from);
  void MergeFrom(const sc_get_room_list& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .onlineproto.room_data_t room_list = 1;
  inline int room_list_size() const;
  inline void clear_room_list();
  static const int kRoomListFieldNumber = 1;
  inline const ::onlineproto::room_data_t& room_list(int index) const;
  inline ::onlineproto::room_data_t* mutable_room_list(int index);
  inline ::onlineproto::room_data_t* add_room_list();
  inline const ::google::protobuf::RepeatedPtrField< ::onlineproto::room_data_t >&
      room_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::onlineproto::room_data_t >*
      mutable_room_list();
  
  // @@protoc_insertion_point(class_scope:onlineproto.sc_get_room_list)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::onlineproto::room_data_t > room_list_;
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static sc_get_room_list* default_instance_;
};
// -------------------------------------------------------------------

class cs_enter_room : public ::google::protobuf::Message {
 public:
  cs_enter_room();
  virtual ~cs_enter_room();
  
  cs_enter_room(const cs_enter_room& from);
  
  inline cs_enter_room& operator=(const cs_enter_room& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cs_enter_room& default_instance();
  
  void Swap(cs_enter_room* other);
  
  // implements Message ----------------------------------------------
  
  cs_enter_room* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cs_enter_room& from);
  void MergeFrom(const cs_enter_room& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::uint32 room_id() const;
  inline void set_room_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:onlineproto.cs_enter_room)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 room_id_;
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static cs_enter_room* default_instance_;
};
// -------------------------------------------------------------------

class sc_enter_room : public ::google::protobuf::Message {
 public:
  sc_enter_room();
  virtual ~sc_enter_room();
  
  sc_enter_room(const sc_enter_room& from);
  
  inline sc_enter_room& operator=(const sc_enter_room& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const sc_enter_room& default_instance();
  
  void Swap(sc_enter_room* other);
  
  // implements Message ----------------------------------------------
  
  sc_enter_room* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sc_enter_room& from);
  void MergeFrom(const sc_enter_room& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:onlineproto.sc_enter_room)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static sc_enter_room* default_instance_;
};
// -------------------------------------------------------------------

class cs_leave_room : public ::google::protobuf::Message {
 public:
  cs_leave_room();
  virtual ~cs_leave_room();
  
  cs_leave_room(const cs_leave_room& from);
  
  inline cs_leave_room& operator=(const cs_leave_room& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cs_leave_room& default_instance();
  
  void Swap(cs_leave_room* other);
  
  // implements Message ----------------------------------------------
  
  cs_leave_room* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cs_leave_room& from);
  void MergeFrom(const cs_leave_room& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:onlineproto.cs_leave_room)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static cs_leave_room* default_instance_;
};
// -------------------------------------------------------------------

class sc_leave_room : public ::google::protobuf::Message {
 public:
  sc_leave_room();
  virtual ~sc_leave_room();
  
  sc_leave_room(const sc_leave_room& from);
  
  inline sc_leave_room& operator=(const sc_leave_room& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const sc_leave_room& default_instance();
  
  void Swap(sc_leave_room* other);
  
  // implements Message ----------------------------------------------
  
  sc_leave_room* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sc_leave_room& from);
  void MergeFrom(const sc_leave_room& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:onlineproto.sc_leave_room)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static sc_leave_room* default_instance_;
};
// -------------------------------------------------------------------

class cs_inside_ready : public ::google::protobuf::Message {
 public:
  cs_inside_ready();
  virtual ~cs_inside_ready();
  
  cs_inside_ready(const cs_inside_ready& from);
  
  inline cs_inside_ready& operator=(const cs_inside_ready& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cs_inside_ready& default_instance();
  
  void Swap(cs_inside_ready* other);
  
  // implements Message ----------------------------------------------
  
  cs_inside_ready* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cs_inside_ready& from);
  void MergeFrom(const cs_inside_ready& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:onlineproto.cs_inside_ready)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static cs_inside_ready* default_instance_;
};
// -------------------------------------------------------------------

class sc_inside_ready : public ::google::protobuf::Message {
 public:
  sc_inside_ready();
  virtual ~sc_inside_ready();
  
  sc_inside_ready(const sc_inside_ready& from);
  
  inline sc_inside_ready& operator=(const sc_inside_ready& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const sc_inside_ready& default_instance();
  
  void Swap(sc_inside_ready* other);
  
  // implements Message ----------------------------------------------
  
  sc_inside_ready* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sc_inside_ready& from);
  void MergeFrom(const sc_inside_ready& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:onlineproto.sc_inside_ready)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static sc_inside_ready* default_instance_;
};
// -------------------------------------------------------------------

class cs_inside_start : public ::google::protobuf::Message {
 public:
  cs_inside_start();
  virtual ~cs_inside_start();
  
  cs_inside_start(const cs_inside_start& from);
  
  inline cs_inside_start& operator=(const cs_inside_start& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cs_inside_start& default_instance();
  
  void Swap(cs_inside_start* other);
  
  // implements Message ----------------------------------------------
  
  cs_inside_start* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cs_inside_start& from);
  void MergeFrom(const cs_inside_start& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:onlineproto.cs_inside_start)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static cs_inside_start* default_instance_;
};
// -------------------------------------------------------------------

class sc_inside_start : public ::google::protobuf::Message {
 public:
  sc_inside_start();
  virtual ~sc_inside_start();
  
  sc_inside_start(const sc_inside_start& from);
  
  inline sc_inside_start& operator=(const sc_inside_start& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const sc_inside_start& default_instance();
  
  void Swap(sc_inside_start* other);
  
  // implements Message ----------------------------------------------
  
  sc_inside_start* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sc_inside_start& from);
  void MergeFrom(const sc_inside_start& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:onlineproto.sc_inside_start)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static sc_inside_start* default_instance_;
};
// -------------------------------------------------------------------

class cs_notify_room_update : public ::google::protobuf::Message {
 public:
  cs_notify_room_update();
  virtual ~cs_notify_room_update();
  
  cs_notify_room_update(const cs_notify_room_update& from);
  
  inline cs_notify_room_update& operator=(const cs_notify_room_update& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cs_notify_room_update& default_instance();
  
  void Swap(cs_notify_room_update* other);
  
  // implements Message ----------------------------------------------
  
  cs_notify_room_update* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cs_notify_room_update& from);
  void MergeFrom(const cs_notify_room_update& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:onlineproto.cs_notify_room_update)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static cs_notify_room_update* default_instance_;
};
// -------------------------------------------------------------------

class sc_notify_room_update : public ::google::protobuf::Message {
 public:
  sc_notify_room_update();
  virtual ~sc_notify_room_update();
  
  sc_notify_room_update(const sc_notify_room_update& from);
  
  inline sc_notify_room_update& operator=(const sc_notify_room_update& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const sc_notify_room_update& default_instance();
  
  void Swap(sc_notify_room_update* other);
  
  // implements Message ----------------------------------------------
  
  sc_notify_room_update* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sc_notify_room_update& from);
  void MergeFrom(const sc_notify_room_update& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 oper = 1;
  inline bool has_oper() const;
  inline void clear_oper();
  static const int kOperFieldNumber = 1;
  inline ::google::protobuf::uint32 oper() const;
  inline void set_oper(::google::protobuf::uint32 value);
  
  // required .onlineproto.room_data_t room = 2;
  inline bool has_room() const;
  inline void clear_room();
  static const int kRoomFieldNumber = 2;
  inline const ::onlineproto::room_data_t& room() const;
  inline ::onlineproto::room_data_t* mutable_room();
  
  // @@protoc_insertion_point(class_scope:onlineproto.sc_notify_room_update)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 oper_;
  ::onlineproto::room_data_t* room_;
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static sc_notify_room_update* default_instance_;
};
// -------------------------------------------------------------------

class cs_create_room : public ::google::protobuf::Message {
 public:
  cs_create_room();
  virtual ~cs_create_room();
  
  cs_create_room(const cs_create_room& from);
  
  inline cs_create_room& operator=(const cs_create_room& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const cs_create_room& default_instance();
  
  void Swap(cs_create_room* other);
  
  // implements Message ----------------------------------------------
  
  cs_create_room* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const cs_create_room& from);
  void MergeFrom(const cs_create_room& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 map_id = 1;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 1;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);
  
  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  
  // required uint32 passwd = 3;
  inline bool has_passwd() const;
  inline void clear_passwd();
  static const int kPasswdFieldNumber = 3;
  inline ::google::protobuf::uint32 passwd() const;
  inline void set_passwd(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:onlineproto.cs_create_room)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 map_id_;
  ::std::string* name_;
  static const ::std::string _default_name_;
  ::google::protobuf::uint32 passwd_;
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static cs_create_room* default_instance_;
};
// -------------------------------------------------------------------

class sc_create_room : public ::google::protobuf::Message {
 public:
  sc_create_room();
  virtual ~sc_create_room();
  
  sc_create_room(const sc_create_room& from);
  
  inline sc_create_room& operator=(const sc_create_room& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const sc_create_room& default_instance();
  
  void Swap(sc_create_room* other);
  
  // implements Message ----------------------------------------------
  
  sc_create_room* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const sc_create_room& from);
  void MergeFrom(const sc_create_room& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:onlineproto.sc_create_room)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  friend void  protobuf_AddDesc_room_2eproto();
  friend void protobuf_AssignDesc_room_2eproto();
  friend void protobuf_ShutdownFile_room_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[1];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static sc_create_room* default_instance_;
};
// ===================================================================


// ===================================================================

// cs_get_room_list

// -------------------------------------------------------------------

// sc_get_room_list

// repeated .onlineproto.room_data_t room_list = 1;
inline int sc_get_room_list::room_list_size() const {
  return room_list_.size();
}
inline void sc_get_room_list::clear_room_list() {
  room_list_.Clear();
}
inline const ::onlineproto::room_data_t& sc_get_room_list::room_list(int index) const {
  return room_list_.Get(index);
}
inline ::onlineproto::room_data_t* sc_get_room_list::mutable_room_list(int index) {
  return room_list_.Mutable(index);
}
inline ::onlineproto::room_data_t* sc_get_room_list::add_room_list() {
  return room_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::onlineproto::room_data_t >&
sc_get_room_list::room_list() const {
  return room_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::onlineproto::room_data_t >*
sc_get_room_list::mutable_room_list() {
  return &room_list_;
}

// -------------------------------------------------------------------

// cs_enter_room

// required uint32 room_id = 1;
inline bool cs_enter_room::has_room_id() const {
  return _has_bit(0);
}
inline void cs_enter_room::clear_room_id() {
  room_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 cs_enter_room::room_id() const {
  return room_id_;
}
inline void cs_enter_room::set_room_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  room_id_ = value;
}

// -------------------------------------------------------------------

// sc_enter_room

// -------------------------------------------------------------------

// cs_leave_room

// -------------------------------------------------------------------

// sc_leave_room

// -------------------------------------------------------------------

// cs_inside_ready

// -------------------------------------------------------------------

// sc_inside_ready

// -------------------------------------------------------------------

// cs_inside_start

// -------------------------------------------------------------------

// sc_inside_start

// -------------------------------------------------------------------

// cs_notify_room_update

// -------------------------------------------------------------------

// sc_notify_room_update

// required uint32 oper = 1;
inline bool sc_notify_room_update::has_oper() const {
  return _has_bit(0);
}
inline void sc_notify_room_update::clear_oper() {
  oper_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 sc_notify_room_update::oper() const {
  return oper_;
}
inline void sc_notify_room_update::set_oper(::google::protobuf::uint32 value) {
  _set_bit(0);
  oper_ = value;
}

// required .onlineproto.room_data_t room = 2;
inline bool sc_notify_room_update::has_room() const {
  return _has_bit(1);
}
inline void sc_notify_room_update::clear_room() {
  if (room_ != NULL) room_->::onlineproto::room_data_t::Clear();
  _clear_bit(1);
}
inline const ::onlineproto::room_data_t& sc_notify_room_update::room() const {
  return room_ != NULL ? *room_ : *default_instance_->room_;
}
inline ::onlineproto::room_data_t* sc_notify_room_update::mutable_room() {
  _set_bit(1);
  if (room_ == NULL) room_ = new ::onlineproto::room_data_t;
  return room_;
}

// -------------------------------------------------------------------

// cs_create_room

// required uint32 map_id = 1;
inline bool cs_create_room::has_map_id() const {
  return _has_bit(0);
}
inline void cs_create_room::clear_map_id() {
  map_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 cs_create_room::map_id() const {
  return map_id_;
}
inline void cs_create_room::set_map_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  map_id_ = value;
}

// required string name = 2;
inline bool cs_create_room::has_name() const {
  return _has_bit(1);
}
inline void cs_create_room::clear_name() {
  if (name_ != &_default_name_) {
    name_->clear();
  }
  _clear_bit(1);
}
inline const ::std::string& cs_create_room::name() const {
  return *name_;
}
inline void cs_create_room::set_name(const ::std::string& value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void cs_create_room::set_name(const char* value) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void cs_create_room::set_name(const char* value, size_t size) {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* cs_create_room::mutable_name() {
  _set_bit(1);
  if (name_ == &_default_name_) {
    name_ = new ::std::string;
  }
  return name_;
}

// required uint32 passwd = 3;
inline bool cs_create_room::has_passwd() const {
  return _has_bit(2);
}
inline void cs_create_room::clear_passwd() {
  passwd_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 cs_create_room::passwd() const {
  return passwd_;
}
inline void cs_create_room::set_passwd(::google::protobuf::uint32 value) {
  _set_bit(2);
  passwd_ = value;
}

// -------------------------------------------------------------------

// sc_create_room


// @@protoc_insertion_point(namespace_scope)

}  // namespace onlineproto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_room_2eproto__INCLUDED
